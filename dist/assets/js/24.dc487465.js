(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{228:function(t,e,s){"use strict";s.r(e);var i=s(0),a=Object(i.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"submodule学习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#submodule学习"}},[t._v("#")]),t._v(" Submodule学习")]),t._v(" "),s("h2",{attrs:{id:"学习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学习"}},[t._v("#")]),t._v(" 学习")]),t._v(" "),s("p",[s("strong",[t._v("1.背景")]),t._v("\n工作中，可能会遇到在一个Git仓库中添加其他Git仓库的场景。比如，在项目中引用第三方库。或者在模块化开发中，某些公共的模块是需要单独维护的，使用单独的仓库比较方便，但是在项目中需要引用，就会出现这样的场景。这里使用Git的"),s("code",[t._v("git submodule")]),t._v("命令为一个git项目添加子git项目。")]),t._v(" "),s("p",[t._v("可以使用"),s("code",[t._v("git submodule --help")]),t._v("查看所有相关命令。")]),t._v(" "),s("p",[t._v("为了方便说明，这里在主项目 nintendo 中加两个子模块lib_a和lib_b.\n"),s("strong",[t._v("2.添加子模块")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git clone git@git.shuiditech.com:belllabs/cloud/nintendo.git\ncd nintendo/\ngit submodule add git@git.shuiditech.com:frontend/devops/common.git src/common\n")])])]),s("p",[t._v("使用 "),s("code",[t._v("git submodule add git@git.shuiditech.com:frontend/devops/common.git src/common")]),t._v(" 添加 common 子模块。文件夹 common 为新增加的子模块目录。")]),t._v(" "),s("blockquote",[s("p",[t._v(".gitmodules文件：保存项目 URL 与已经拉取的本地目录之间的映射，有多个子模块则含有多条记录，会随着版本控制一起被拉去和推送的。")])]),t._v(" "),s("p",[s("strong",[t._v("3.更新子模块")]),t._v("\n（1）方法一")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("cd common/\ngit fetch\ngit merge origin/master\n")])])]),s("p",[t._v("（2）方法二")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git config -f .gitmodules submodule.common.branch dev\ngit submodule update --remote\n")])])]),s("blockquote",[s("p",[t._v("这里对 .gitmodules 加了 -f 参数，修改提交后对所有用户有效。")])]),t._v(" "),s("p",[s("strong",[t._v("4.删除子模块")]),t._v("\n在日常开发中，有添加，当然也会有删除 子模块的需求。")]),t._v(" "),s("ul",[s("li",[t._v("使用 git rm --cached liba 将liba 从版本控制中删除（本地仍保留有），若不需要可不带 --cached进行完全删除。")]),t._v(" "),s("li",[t._v("使用 vim .gitmodules 可打开vim编辑,删除对应的内容")]),t._v(" "),s("li",[t._v("使用 vim .git/config 可打开vim编辑,删除对应的内容")]),t._v(" "),s("li",[t._v("使用 rm -rf .git/modules/common, 删除.git下的缓存模块，最后提交项目。")])]),t._v(" "),s("p",[s("strong",[t._v("5.克隆含子模块的仓库")]),t._v("\n若需要克隆含有子模块的仓库，直接进行克隆是无法拉取之子模块的代码，可加上 "),s("code",[t._v("--recursive")]),t._v(" 参数，如下：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git clone --recursive https://github.com/imtianx/MainProject.git\n")])])]),s("p",[t._v("或者使用下面的三部操作：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git clone  git@git.shuiditech.com:belllabs/cloud/nintendo.git\ncd nintendo/\ngit submodule init\ngit submodule update\n")])])]),s("h2",{attrs:{id:"工作中遇到的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作中遇到的问题"}},[t._v("#")]),t._v(" 工作中遇到的问题")])])}),[],!1,null,null,null);e.default=a.exports}}]);